// Code generated by "stringer --type=Token"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[ILLEGAL-1]
	_ = x[COMMENT-2]
	_ = x[IDENTITY-3]
	_ = x[INTEGER-4]
	_ = x[STRING-5]
	_ = x[ADD-6]
	_ = x[SUBTRACT-7]
	_ = x[MULTIPLY-8]
	_ = x[DIVIDE-9]
	_ = x[ASSIGNMENT-10]
	_ = x[LESS_THAN-11]
	_ = x[GREATER_THAN-12]
	_ = x[EQUAL-13]
	_ = x[NOT_EQUAL-14]
	_ = x[LESS_THAN_OR_EQUAL-15]
	_ = x[GREATER_THAN_OR_EQUAL-16]
	_ = x[AND-17]
	_ = x[OR-18]
	_ = x[OPEN-19]
	_ = x[CLOSE-20]
	_ = x[IF-21]
	_ = x[FOR-22]
	_ = x[FUNCTION-23]
	_ = x[RETURN-24]
}

const _Token_name = "EOFILLEGALCOMMENTIDENTITYINTEGERSTRINGADDSUBTRACTMULTIPLYDIVIDEASSIGNMENTLESS_THANGREATER_THANEQUALNOT_EQUALLESS_THAN_OR_EQUALGREATER_THAN_OR_EQUALANDOROPENCLOSEIFFORFUNCTIONRETURN"

var _Token_index = [...]uint8{0, 3, 10, 17, 25, 32, 38, 41, 49, 57, 63, 73, 82, 94, 99, 108, 126, 147, 150, 152, 156, 161, 163, 166, 174, 180}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
